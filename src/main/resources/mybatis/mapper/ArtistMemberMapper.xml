<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ArtistMapper.xml -->
<mapper namespace="com.e114.e114_eumyuratodemo1.jdbc.ArtistMemberDAO">
    <select id="findById" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT *
        FROM artist_member
        WHERE id = #{id}
    </select>

    <select id="findByPwd" parameterType="java.lang.String"
            resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT pwd
        FROM artist_member
        WHERE pwd = #{pwd}
    </select>
    <!--회원가입-->
    <insert id="insert" parameterType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        INSERT INTO artist_member (id, pwd, name, nid, birth, sex, email, phone, genre,
                                   adminNum)
        VALUES (#{id}, #{pwd}, #{name}, #{nid}, #{birth}, #{sex}, #{email}, #{phone}, #{genre},
                #{adminNum})
    </insert>

    <select id="findByAdminNum" parameterType="int" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT *
        FROM artist_member
        WHERE admin_num = #{adminNum}
    </select>

    <!--중복체크-->
    <select id="useById" parameterType="java.lang.String" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT *
        FROM artist_member
        WHERE id = #{id}
    </select>

    <select id="useByNid" parameterType="java.lang.String"
            resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT *
        FROM artist_member
        WHERE nid = #{nid}
    </select>

    <!--아이디 찾기-->
    <select id="findUserIdsByNameAndEmail" resultType="String">
        SELECT id
        FROM artist_member
        WHERE name = #{name}
          AND email = #{email}
    </select>

    <!--비밀번호 찾기-->
    <update id="updatePassword">
        update artist_member
        set pwd = #{pwd}
        where id = #{id}
    </update>

    <!--아티스트 랭킹-->
    <!-- Result Map 정의 -->
    <resultMap type="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO" id="artistMemberDTOResultMap">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="point" property="point"/>
    </resultMap>

    <!-- selectTop5Artists 쿼리 정의 -->
    <select id="selectTop5Artists" resultMap="artistMemberDTOResultMap">
        SELECT id, name, point
        FROM artist_member
        ORDER BY point DESC LIMIT 5
    </select>

    <select id="getArtistMembers" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        select *
        from artist_member
        ORDER BY name ASC;
    </select>

    <select id="getCommonMembers" resultType="com.e114.e114_eumyuratodemo1.dto.CommonMemberDTO">
        select *
        from common_member
        ORDER BY name ASC;
    </select>

    <select id="searchCommonMembers" resultType="com.e114.e114_eumyuratodemo1.dto.CommonMemberDTO">
        SELECT * FROM common_member
        WHERE ${column} LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY name ASC;
    </select>

    <select id="searchArtistMembers" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT * FROM artist_member
        WHERE ${column} LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY name ASC;
    </select>

    <select id="getArtistInfoById" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT *
        FROM artist_member
        WHERE id = #{id} AND adminNum = 2
    </select>

    <select id="getArtistBuskings" resultType="com.e114.e114_eumyuratodemo1.dto.BuskingDTO">
        select * from busking where artId = #{artId} ORDER BY regDate DESC
    </select>

    <select id="searchArtistBuskings" resultType="com.e114.e114_eumyuratodemo1.dto.BuskingDTO">
        select * from busking where artId = #{artId} and ${column} LIKE CONCAT('%', #{keyword}, '%') ORDER BY regDate DESC
    </select>

    <delete id="deleteArtistBusking">
        DELETE FROM busking WHERE id = #{param1} AND date > CURRENT_DATE
    </delete>

    <select id="getCommonGender" resultType="map">
        SELECT sex, COUNT(*) as count
        FROM common_member
        GROUP BY sex;
    </select>

    <select id="getCommonGenre" resultType="map">
        SELECT genre, COUNT(*) as count
        FROM common_member
        GROUP BY genre;
    </select>

    <select id="getArtistGender" resultType="map">
        SELECT sex, COUNT(*) as count
        FROM artist_member
        GROUP BY sex;
    </select>

    <select id="getArtistGenre" resultType="map">
        SELECT genre, COUNT(*) as count
        FROM artist_member
        GROUP BY genre;
    </select>

    <select id="getArtistPoint" resultType="map">
        SELECT id, nid, point
        FROM artist_member
        ORDER BY point DESC
            LIMIT 10;
    </select>

    <select id="getArtistPointAvg" resultType="map">
        SELECT CAST(ROUND(AVG(point)) AS SIGNED) AS avg_point
        FROM artist_member;
    </select>

    <select id="getArtistBuskingIng" resultType="map">
        <![CDATA[
        SELECT COUNT(*) AS busking_ing
        FROM busking
        WHERE date >= CURDATE();
        ]]>
    </select>

    <select id="getArtistBuskingAll" resultType="map">
        SELECT COUNT(*) AS all_busking
        FROM busking;
    </select>

    <insert id="saveBuskingWithoutImage" parameterType="com.e114.e114_eumyuratodemo1.dto.BuskingDTO">
        INSERT INTO busking (name, artId, date, location)
        VALUES (#{name}, #{artId}, #{date}, #{location})
    </insert>

    <insert id="saveBusking" parameterType="com.e114.e114_eumyuratodemo1.dto.BuskingDTO">
        INSERT INTO busking (name, artId, date, location, image)
        VALUES (#{name}, #{artId}, #{date}, #{location}, #{image})
    </insert>
</mapper>
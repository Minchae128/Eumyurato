<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ArtistMapper.xml -->
<mapper namespace="com.e114.e114_eumyuratodemo1.jdbc.EnterpriseMemberDAO">
    <select id="findById" resultType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        SELECT *
        FROM enterprise_member
        WHERE id = #{id}
    </select>

    <select id="findByPwd" parameterType="java.lang.String"
            resultType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        SELECT pwd
        FROM enterprise_member
        WHERE pwd = #{pwd}
    </select>

    <!--회원가입-->
    <insert id="insert" parameterType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        INSERT INTO enterprise_member (id, pwd, name, num, email, phone, adminNum)
        VALUES (#{id}, #{pwd}, #{name}, #{num}, #{email}, #{phone}, #{adminNum})
    </insert>

    <select id="findByAdminNum" parameterType="int" resultType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        SELECT *
        FROM enterprise_member
        WHERE admin_num = #{adminNum}
    </select>

    <!--중복체크-->
    <select id="useById" parameterType="java.lang.String"
            resultType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        SELECT *
        FROM enterprise_member
        WHERE id = #{id}
    </select>

    <!--아이디 찾기-->
    <select id="findUserIdsByNameAndEmail" resultType="String">
        SELECT id
        FROM enterprise_member
        WHERE name = #{name}
          AND email = #{email}
    </select>

    <!--비밀번호 찾기-->
    <update id="updatePassword">
        update enterprise_member set pwd = #{pwd} where id = #{id}
    </update>

    <select id="getEntInfoById" resultType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        SELECT *
        FROM enterprise_member
        WHERE id = #{id} AND adminNum = 3
    </select>

    <select id="getArtistMembers" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        select *
        from artist_member
        ORDER BY name ASC
    </select>

    <select id="getCommonMembers" resultType="com.e114.e114_eumyuratodemo1.dto.CommonMemberDTO">
        select *
        from common_member
        ORDER BY name ASC
    </select>

    <select id="getEntMembers" resultType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        select *
        from enterprise_member
        ORDER BY name ASC
    </select>

    <select id="searchCommonMembers" resultType="com.e114.e114_eumyuratodemo1.dto.CommonMemberDTO">
        SELECT * FROM common_member
        WHERE ${column} LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY name ASC
    </select>

    <select id="searchArtistMembers" resultType="com.e114.e114_eumyuratodemo1.dto.ArtistMemberDTO">
        SELECT * FROM artist_member
        WHERE ${column} LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY name ASC
    </select>

    <select id="searchEntMembers" resultType="com.e114.e114_eumyuratodemo1.dto.EnterpriseMemberDTO">
        SELECT * FROM enterprise_member
        WHERE ${column} LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY name ASC
    </select>

    <select id="getEntSmallConcerts" resultType="com.e114.e114_eumyuratodemo1.dto.SmallConcertDTO">
        select * from small_concert where enterId = #{enterId}
        ORDER BY regDate DESC
    </select>

    <select id="searchEntSmallConcerts" resultType="com.e114.e114_eumyuratodemo1.dto.SmallConcertDTO">
        select * from small_concert where enterId = #{enterId} AND ${column} LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY regDate DESC
    </select>

    <select id="getCommonGender" resultType="map">
        SELECT sex, COUNT(*) as count
        FROM common_member
        GROUP BY sex;
    </select>

    <select id="getCommonGenre" resultType="map">
        SELECT genre, COUNT(*) as count
        FROM common_member
        GROUP BY genre;
    </select>

    <select id="getArtistGender" resultType="map">
        SELECT sex, COUNT(*) as count
        FROM artist_member
        GROUP BY sex;
    </select>

    <select id="getArtistGenre" resultType="map">
        SELECT genre, COUNT(*) as count
        FROM artist_member
        GROUP BY genre;
    </select>

    <select id="getEnterConcertIng" resultType="map">
        <![CDATA[
        SELECT COUNT(*) AS concert_ing
        FROM small_concert
        WHERE startDate <= CURDATE() AND lastDate >= CURDATE();
        ]]>
    </select>

    <select id="getEnterConcertAll" resultType="map">
        SELECT COUNT(*) AS concert_all
        FROM small_concert;
    </select>

    <select id="searchReservationsByEnterId" resultType="com.e114.e114_eumyuratodemo1.dto.ReservationDTO">
        SELECT r.*, sc.name
        FROM reservation r
                 JOIN schedules s ON r.sid = s.id
                 JOIN small_concert sc ON s.conId = sc.id
        WHERE sc.enterId = #{enterId}
          AND ${column} LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY payTime DESC
    </select>

    <select id="getReservationsByEnterId" resultType="com.e114.e114_eumyuratodemo1.dto.ReservationDTO">
        SELECT r.*, sc.name
        FROM reservation r
                 JOIN schedules s ON r.sid = s.id
                 JOIN small_concert sc ON s.conId = sc.id
        WHERE sc.enterId = #{enterId}
        ORDER BY payTime DESC
    </select>
</mapper>